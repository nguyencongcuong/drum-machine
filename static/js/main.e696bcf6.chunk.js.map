{"version":3,"sources":["DrumMachineDB.js","components/DrumPad.js","components/ModeSwitcher.js","actions/index.js","components/PowerSwitcher.js","components/VolumeChanger.js","DrumMachine.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","reducers/index.js","reducers/power.js","reducers/mode.js","reducers/volume.js","index.js"],"names":["database1","name","keyCode","desc","url","database2","Screen","props","id","className","DrumKey","handleKeyDown","event","onKeyDown","useEffect","document","addEventListener","keyDesc","split","join","onClick","controls","keyName","src","audioURL","hidden","DrumPad","useState","setKeyDesc","setAudioID","database","setDatabase","powerStatus","useSelector","state","powerReducer","modeStatus","modeReducer","volumeStatus","volumeReducer","playAudio","audio","getElementById","muted","volume","play","Fragment","map","e","ToggleButton","size","ModeSwitcher","dispatch","useDispatch","type","PowerSwitcher","VolumeChanger","value","onChange","volumeLevel","target","min","max","step","DrumMachine","App","Boolean","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","allReducers","combineReducers","action","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e696bcf6.chunk.js","sourcesContent":["const database1 = [\r\n    {\r\n        name: \"Q\",\r\n        keyCode: 81,\r\n        desc: \"Heater 1\",\r\n        url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3\"\r\n    },\r\n    {\r\n        name: \"W\",\r\n        keyCode: 87,\r\n        desc: \"Heater 2\",\r\n        url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3\"\r\n    },\r\n    {\r\n        name: \"E\",\r\n        keyCode: 69,\r\n        desc: \"Heater 3\",\r\n        url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3\"\r\n    },\r\n    {\r\n        name: \"A\",\r\n        keyCode: 65,\r\n        desc: \"Heater 4\",\r\n        url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3\"\r\n    },\r\n    {\r\n        name: \"S\",\r\n        keyCode: 83,\r\n        desc: \"Clap\",\r\n        url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3\"\r\n    },\r\n    {\r\n        name: \"D\",\r\n        keyCode: 68,\r\n        desc: \"Open HH\",\r\n        url: \"https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3\"\r\n    },\r\n    {\r\n        name: \"Z\",\r\n        keyCode: 90,\r\n        desc: \"Kick 'n Hat\",\r\n        url: \"https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3\"\r\n    },\r\n    {\r\n        name: \"X\",\r\n        keyCode: 88,\r\n        desc: \"Kick\",\r\n        url: \"https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3\"\r\n    },\r\n    {\r\n        name: \"C\",\r\n        keyCode: 67,\r\n        desc: \"Close HH\",\r\n        url: \"https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3\"\r\n    }\r\n]\r\n\r\nconst database2 = [\r\n    {\r\n        name: \"Q\",\r\n        keyCode: 81,\r\n        desc: \"Chord 1\",\r\n        url: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3\"\r\n    },\r\n    {\r\n        name: \"W\",\r\n        keyCode: 87,\r\n        desc: \"Chord 2\",\r\n        url: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3\"\r\n    },\r\n    {\r\n        name: \"E\",\r\n        keyCode: 69,\r\n        desc: \"Chord 3\",\r\n        url: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3\"\r\n    },\r\n    {\r\n        name: \"A\",\r\n        keyCode: 65,\r\n        desc: \"Shaker\",\r\n        url: \"https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3\"\r\n    },\r\n    {\r\n        name: \"S\",\r\n        keyCode: 83,\r\n        desc: \"Open HH\",\r\n        url: \"https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3\"\r\n    },\r\n    {\r\n        name: \"D\",\r\n        keyCode: 68,\r\n        desc: \"Closed HH\",\r\n        url: \"https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3\"\r\n    },\r\n    {\r\n        name: \"Z\",\r\n        keyCode: 90,\r\n        desc: \"Punchy Kick\",\r\n        url: \"https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3\"\r\n    },\r\n    {\r\n        name: \"X\",\r\n        keyCode: 88,\r\n        desc: \"Side Stick\",\r\n        url: \"https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3\"\r\n    },\r\n    {\r\n        name: \"C\",\r\n        keyCode: 67,\r\n        desc: \"Snare\",\r\n        url: \"https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3\"\r\n    }\r\n]\r\n\r\n\r\nexport { database1, database2 }","import React from \"react\"\r\nimport { database1, database2 } from \"../DrumMachineDB\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { useState, useEffect } from \"react\"\r\n\r\nfunction Screen(props) {\r\n    return (\r\n        <div\r\n            id=\"display\"\r\n            className=\"flex justify-center items-center bg-white font-bold text-center rounded mb-4 p-2 h-24\">\r\n            {props.desc}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction DrumKey(props) {\r\n\r\n    const handleKeyDown = (event) => {\r\n        if (event.keyCode === props.keyCode) {\r\n            { props.onKeyDown() }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.addEventListener(\"keydown\", handleKeyDown)\r\n    })\r\n\r\n    return (\r\n        <div \r\n            id={props.keyDesc.split(\" \").join(\"-\")}\r\n            className=\"drum-pad bg-gray-500 text-white text-center font-bold rounded cursor-pointer gap-2 p-4\"\r\n            onClick={props.onClick}\r\n        >\r\n            <audio \r\n                controls \r\n                id={props.keyName}\r\n                className=\"clip\"\r\n                src={props.audioURL} \r\n                hidden\r\n            />\r\n            <span className=\"uppercase\">{props.keyName}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction DrumPad() {\r\n\r\n    const [keyDesc, setKeyDesc] = useState(\"\")\r\n    const [audioID, setAudioID] = useState(\"\")\r\n    const [database, setDatabase] = useState([])\r\n\r\n    const powerStatus = useSelector(state => state.powerReducer)\r\n    const modeStatus = useSelector(state => state.modeReducer)\r\n    const volumeStatus = useSelector(state => state.volumeReducer) / 100\r\n\r\n    const playAudio = (id) => {\r\n        const audio = document.getElementById(id)\r\n        if(powerStatus) {\r\n            audio.muted = false\r\n            audio.volume = volumeStatus\r\n            audio.play()\r\n        } else if (!powerStatus) {\r\n            audio.muted = true\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        modeStatus === 1 ? setDatabase(database1) : setDatabase(database2)\r\n    }, [modeStatus])\r\n\r\n    const DrumPadList = () => {\r\n        return database.map(e => \r\n            <DrumKey\r\n                key={ e.name }\r\n                keyCode={ e.keyCode }\r\n                keyName={ e.name } \r\n                keyDesc={ e.desc }\r\n                audioURL={ e.url }\r\n                onClick={ () => {\r\n                    setKeyDesc(e.desc)\r\n                    playAudio(e.name)\r\n                }}\r\n                onKeyDown={ () => {\r\n                    setKeyDesc(e.desc)\r\n                    setAudioID(e.name)\r\n                    playAudio(e.name)\r\n                }}\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Screen desc={keyDesc} />\r\n            <div className=\"grid grid-cols-3 gap-1\">\r\n                {DrumPadList()}\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DrumPad","import React from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { mode } from \"../actions\"\r\nimport { FiToggleLeft, FiToggleRight } from \"react-icons/fi\"\r\n\r\nfunction ToggleButton(props) {\r\n    const modeStatus = useSelector(state => state.modeReducer)\r\n    return (\r\n        <div\r\n            onClick={props.onClick}>\r\n            {\r\n                modeStatus === 1 ?\r\n                <div className=\"text-gray-600\"><FiToggleLeft size=\"30px\" /></div> :\r\n                <div className=\"text-gray-600\"><FiToggleRight size=\"30px\" /></div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction ModeSwitcher() {\r\n    const dispatch = useDispatch()\r\n    return (\r\n        <div className=\"modeSwitcher\">\r\n            <span className=\"uppercase font-bold\">Mode</span>\r\n            <ToggleButton onClick={() => dispatch(mode())} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ModeSwitcher","export const mode = () => {\r\n    return {\r\n        type: \"mode\"\r\n    }\r\n}\r\nexport const power = () => {\r\n    return {\r\n        type: \"power\"\r\n    }\r\n}\r\nexport const volume = (volumeLevel) => {\r\n    return {\r\n        type: \"volume\",\r\n        volumeLevel: volumeLevel\r\n    }\r\n}","import React from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { power } from \"../actions\"\r\nimport { BsToggleOn, BsToggleOff } from \"react-icons/bs\"\r\n\r\nfunction ToggleButton(props) {\r\n    const powerStatus = useSelector(state => state.powerReducer)\r\n    return (\r\n        <div\r\n            onClick={props.onClick}>\r\n            { \r\n                powerStatus ? \r\n                <div className=\"text-gray-600\"><BsToggleOn size=\"30px\" /></div> : \r\n                <div className=\"text-gray-600\"><BsToggleOff size=\"30px\" /></div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction PowerSwitcher() {\r\n    const dispatch = useDispatch()\r\n    return (\r\n        <div className=\"powerSwitcher\">\r\n            <span className=\"uppercase font-bold\">Power</span>\r\n            <ToggleButton onClick={() => dispatch(power())} />\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default PowerSwitcher","import React from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { volume } from \"../actions\"\r\n\r\nfunction VolumeChanger() {\r\n\r\n    const volumeStatus = useSelector(state => state.volumeReducer)\r\n    const dispatch = useDispatch()\r\n    const handleChange = (e) => dispatch(volume(e.target.value))\r\n    \r\n    return (\r\n        <div className=\"volumeChanger\">\r\n            <span className=\"uppercase font-bold\">Volume {volumeStatus}</span>\r\n            <input type=\"range\" name=\"volume\" value={volumeStatus} onChange={handleChange} min=\"0\" max=\"100\" step=\"10\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VolumeChanger","import React from \"react\"\r\nimport DrumPad from \"./components/DrumPad\"\r\nimport ModeSwitcher from \"./components/ModeSwitcher\"\r\nimport PowerSwitcher from \"./components/PowerSwitcher\"\r\nimport VolumeChanger from \"./components/VolumeChanger\"\r\n\r\nfunction DrumMachine() {\r\n    return (\r\n        <div id=\"drum-machine\" className=\"grid md:grid-cols-12 w-screen\">\r\n            <div className=\"md:col-start-4 md:col-end-10\">\r\n                <h1 className=\"text-2xl text-center font-bold uppercase px-4 py-8\">Drum Machine</h1>\r\n            </div>\r\n            <div className=\"md:col-start-4 md:col-end-10 grid md:grid-cols-3 gap-2 mb-2\">\r\n                <PowerSwitcher />\r\n                <ModeSwitcher />\r\n                <VolumeChanger />\r\n            </div>\r\n            <div className=\"md:col-start-4 md:col-end-10\">\r\n                <DrumPad />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DrumMachine","import React from 'react';\nimport DrumMachine from './DrumMachine';\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <DrumMachine />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\r\nimport { powerReducer } from \"./power\";\r\nimport { modeReducer } from \"./mode\";\r\nimport { volumeReducer } from \"./volume\";\r\n\r\nconst allReducers = combineReducers({\r\n    powerReducer,\r\n    modeReducer,\r\n    volumeReducer\r\n})\r\n\r\nexport default allReducers","export const powerReducer = (state = true, action) => {\r\n    switch (action.type) {\r\n        case \"power\":\r\n            return !state\r\n        default:\r\n            return state\r\n    }\r\n}","export const modeReducer = (state = 1, action) => {\r\n    switch(action.type) {\r\n        case \"mode\":\r\n            return (state === 1) ? 2 : 1\r\n        default:\r\n            return state\r\n    }\r\n}","export const volumeReducer = (state = 50, action) => {\r\n    switch(action.type) {\r\n        case \"volume\":\r\n            return action.volumeLevel\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nimport './index.css'\n\nimport { createStore } from \"redux\"\nimport { Provider } from \"react-redux\"\nimport allReducers from './reducers';\n\nconst store = createStore(allReducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}