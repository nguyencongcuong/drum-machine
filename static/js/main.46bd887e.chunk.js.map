{"version":3,"sources":["DrumMachineDB.js","actions/index.js","components/DrumPad.js","components/ModeSwitcher.js","components/PowerSwitcher.js","components/VolumeChanger.js","components/Display.js","DrumMachine.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","reducers/index.js","reducers/power.js","reducers/mode.js","reducers/volume.js","reducers/keyDesc.js","reducers/database.js","index.js"],"names":["database1","name","code","desc","url","database2","getDatabase","database","type","DrumKey","props","handleKeyDown","event","keyCode","onKeyDown","useEffect","document","addEventListener","id","keyDesc","split","join","className","onClick","keyName","src","audioURL","hidden","DrumPad","powerStatus","useSelector","state","powerReducer","modeStatus","modeReducer","volumeStatus","volumeReducer","databaseReducer","dispatch","useDispatch","handler","keyID","audio","getElementById","muted","volume","play","playAudio","description","Fragment","map","e","ToggleButton","size","ModeSwitcher","PowerSwitcher","VolumeChanger","value","onChange","volumeLevel","target","min","max","step","Display","keyDescReducer","DrumMachine","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","allReducers","combineReducers","action","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","URL","process","href","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.46bd887e.chunk.js","sourcesContent":["const database1 = [\r\n    {\r\n        name: \"Q\",\r\n        code: 81,\r\n        desc: \"Heater 1\",\r\n        url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3\"\r\n    },\r\n    {\r\n        name: \"W\",\r\n        code: 87,\r\n        desc: \"Heater 2\",\r\n        url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3\"\r\n    },\r\n    {\r\n        name: \"E\",\r\n        code: 69,\r\n        desc: \"Heater 3\",\r\n        url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3\"\r\n    },\r\n    {\r\n        name: \"A\",\r\n        code: 65,\r\n        desc: \"Heater 4\",\r\n        url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3\"\r\n    },\r\n    {\r\n        name: \"S\",\r\n        code: 83,\r\n        desc: \"Clap\",\r\n        url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3\"\r\n    },\r\n    {\r\n        name: \"D\",\r\n        code: 68,\r\n        desc: \"Open HH\",\r\n        url: \"https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3\"\r\n    },\r\n    {\r\n        name: \"Z\",\r\n        code: 90,\r\n        desc: \"Kick 'n Hat\",\r\n        url: \"https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3\"\r\n    },\r\n    {\r\n        name: \"X\",\r\n        code: 88,\r\n        desc: \"Kick\",\r\n        url: \"https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3\"\r\n    },\r\n    {\r\n        name: \"C\",\r\n        code: 67,\r\n        desc: \"Close HH\",\r\n        url: \"https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3\"\r\n    }\r\n]\r\n\r\nconst database2 = [\r\n    {\r\n        name: \"Q\",\r\n        code: 81,\r\n        desc: \"Chord 1\",\r\n        url: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3\"\r\n    },\r\n    {\r\n        name: \"W\",\r\n        code: 87,\r\n        desc: \"Chord 2\",\r\n        url: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3\"\r\n    },\r\n    {\r\n        name: \"E\",\r\n        code: 69,\r\n        desc: \"Chord 3\",\r\n        url: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3\"\r\n    },\r\n    {\r\n        name: \"A\",\r\n        code: 65,\r\n        desc: \"Shaker\",\r\n        url: \"https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3\"\r\n    },\r\n    {\r\n        name: \"S\",\r\n        code: 83,\r\n        desc: \"Open HH\",\r\n        url: \"https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3\"\r\n    },\r\n    {\r\n        name: \"D\",\r\n        code: 68,\r\n        desc: \"Closed HH\",\r\n        url: \"https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3\"\r\n    },\r\n    {\r\n        name: \"Z\",\r\n        code: 90,\r\n        desc: \"Punchy Kick\",\r\n        url: \"https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3\"\r\n    },\r\n    {\r\n        name: \"X\",\r\n        code: 88,\r\n        desc: \"Side Stick\",\r\n        url: \"https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3\"\r\n    },\r\n    {\r\n        name: \"C\",\r\n        code: 67,\r\n        desc: \"Snare\",\r\n        url: \"https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3\"\r\n    }\r\n]\r\n\r\n\r\nexport { database1, database2 }","export const mode = () => {\r\n    return {\r\n        type: \"mode\"\r\n    }\r\n}\r\nexport const power = () => {\r\n    return {\r\n        type: \"power\"\r\n    }\r\n}\r\nexport const volume = (volumeLevel) => {\r\n    return {\r\n        type: \"volume\",\r\n        volumeLevel: volumeLevel\r\n    }\r\n}\r\n\r\nexport const dislayKeyDesc = (description) => {\r\n    return {\r\n        type: \"dislayKeyDesc\",\r\n        description: description\r\n    }\r\n}\r\n\r\nexport const getDatabase = (database) => {\r\n    return {\r\n        type: \"getDatabase\",\r\n        database: database\r\n    }\r\n}","import React, { useEffect } from \"react\"\r\nimport { database1, database2 } from \"../DrumMachineDB\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { dislayKeyDesc, getDatabase } from \"../actions\"\r\n\r\nfunction DrumKey(props) {\r\n\r\n    const handleKeyDown = (event) => {\r\n        if (event.keyCode === props.keyCode) {\r\n            { props.onKeyDown() }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.addEventListener(\"keydown\", handleKeyDown)\r\n    })\r\n\r\n    return (\r\n        <div \r\n            id={props.keyDesc.split(\" \").join(\"-\")}\r\n            className=\"drum-pad bg-gray-500 text-white text-center font-bold rounded cursor-pointer gap-2 p-4\"\r\n            onClick={props.onClick}\r\n        >\r\n            <audio \r\n                id={props.keyName}\r\n                className=\"clip\"\r\n                src={props.audioURL} \r\n                hidden\r\n            />\r\n            <span className=\"uppercase\">{props.keyName}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction DrumPad() {\r\n\r\n    const powerStatus = useSelector(state => state.powerReducer)\r\n    const modeStatus = useSelector(state => state.modeReducer)\r\n    const volumeStatus = useSelector(state => state.volumeReducer) / 100\r\n    const database = useSelector(state => state.databaseReducer)\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const playAudio = (keyID) => {\r\n        const audio = document.getElementById(keyID)\r\n        if(powerStatus) {\r\n            audio.muted = false\r\n            audio.volume = volumeStatus\r\n            audio.play()\r\n        } else if (!powerStatus) {\r\n            audio.muted = true\r\n        }\r\n    }\r\n\r\n    const handler = (keyID, keyDesc) => {\r\n        playAudio(keyID)\r\n        dispatch(dislayKeyDesc(keyDesc))\r\n    }\r\n\r\n    useEffect(() => {\r\n        modeStatus === 1 ? dispatch(getDatabase(database1)) : dispatch(getDatabase(database2))\r\n    }, [modeStatus])\r\n\r\n    const DrumPadList = () =>\r\n        database.map(e => \r\n            <DrumKey\r\n                key={ e.code }\r\n                keyName={e.name}\r\n                keyCode={ e.code }\r\n                keyDesc={ e.desc }\r\n                audioURL={ e.url }\r\n                onClick={ () => handler(e.name, e.desc) }\r\n                onKeyDown={ () => handler(e.name, e.desc) }\r\n            />\r\n        )\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"grid grid-cols-3 gap-1\">\r\n                { DrumPadList() }\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DrumPad","import React from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { mode } from \"../actions\"\r\nimport { FiToggleLeft, FiToggleRight } from \"react-icons/fi\"\r\n\r\nfunction ToggleButton(props) {\r\n    const modeStatus = useSelector(state => state.modeReducer)\r\n    return (\r\n        <div\r\n            onClick={props.onClick}>\r\n            {\r\n                modeStatus === 1 ?\r\n                <div className=\"text-gray-600\"><FiToggleLeft size=\"30px\" /></div> :\r\n                <div className=\"text-gray-600\"><FiToggleRight size=\"30px\" /></div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction ModeSwitcher() {\r\n    const dispatch = useDispatch()\r\n    return (\r\n        <div className=\"modeSwitcher\">\r\n            <span className=\"uppercase font-bold\">Mode</span>\r\n            <ToggleButton onClick={() => dispatch(mode())} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ModeSwitcher","import React from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { power } from \"../actions\"\r\nimport { BsToggleOn, BsToggleOff } from \"react-icons/bs\"\r\n\r\nfunction ToggleButton(props) {\r\n    const powerStatus = useSelector(state => state.powerReducer)\r\n    return (\r\n        <div\r\n            onClick={props.onClick}>\r\n            { \r\n                powerStatus ? \r\n                <div className=\"text-gray-600\"><BsToggleOn size=\"30px\" /></div> : \r\n                <div className=\"text-gray-600\"><BsToggleOff size=\"30px\" /></div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction PowerSwitcher() {\r\n    const dispatch = useDispatch()\r\n    return (\r\n        <div className=\"powerSwitcher\">\r\n            <span className=\"uppercase font-bold\">Power</span>\r\n            <ToggleButton onClick={() => dispatch(power())} />\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default PowerSwitcher","import React from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { volume } from \"../actions\"\r\n\r\nfunction VolumeChanger() {\r\n\r\n    const volumeStatus = useSelector(state => state.volumeReducer)\r\n    const dispatch = useDispatch()\r\n    const handleChange = (e) => dispatch(volume(e.target.value))\r\n    \r\n    return (\r\n        <div className=\"volumeChanger\">\r\n            <span className=\"uppercase font-bold pb-2\">Volume {volumeStatus}</span>\r\n            <input \r\n                type=\"range\" \r\n                name=\"volume\" \r\n                value={volumeStatus} \r\n                onChange={handleChange}\r\n                min=\"0\"\r\n                max=\"100\"\r\n                step=\"10\"\r\n                className=\"outline-none cursor-pointer\"  \r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VolumeChanger","import React from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\n\r\nfunction Display() {\r\n\r\n    const keyDesc = useSelector(state => state.keyDescReducer)\r\n    \r\n    return (\r\n        <div\r\n            id=\"display\"\r\n            className=\"flex justify-center items-center bg-white rounded mb-4 p-2 h-24\"\r\n        >\r\n            <span className=\"text-4xl text-center\">{keyDesc}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Display","import React from \"react\"\r\nimport DrumPad from \"./components/DrumPad\"\r\nimport ModeSwitcher from \"./components/ModeSwitcher\"\r\nimport PowerSwitcher from \"./components/PowerSwitcher\"\r\nimport VolumeChanger from \"./components/VolumeChanger\"\r\nimport Display from \"./components/Display\"\r\n\r\nfunction DrumMachine() {\r\n    return (\r\n        <div id=\"drum-machine\" className=\"grid md:grid-cols-12 w-screen p-4\">\r\n            <div className=\"md:col-start-4 md:col-end-10\">\r\n                <h1 className=\"text-2xl text-center font-bold uppercase px-4 py-8\">Drum Machine</h1>\r\n            </div>\r\n            <div className=\"md:col-start-4 md:col-end-10 grid grid-col-2 md:grid-cols-3 gap-2 mb-2\">\r\n                <div className=\"col-span-1 md:col-span-1\"><PowerSwitcher /></div>\r\n                <div className=\"col-span-1 md:col-span-1\"><ModeSwitcher /></div>\r\n                <div className=\"col-span-2 md:col-span-1\"><VolumeChanger /></div>\r\n            </div>\r\n            <div className=\"md:col-start-4 md:col-end-10\">\r\n                <Display />\r\n            </div>\r\n            <div className=\"md:col-start-4 md:col-end-10\">\r\n                <DrumPad />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DrumMachine","import React from 'react';\r\nimport DrumMachine from './DrumMachine';\r\n\r\nfunction App() {\r\n  return (\r\n    <React.Fragment>\r\n      <DrumMachine />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { combineReducers } from \"redux\"\r\nimport { powerReducer } from \"./power\"\r\nimport { modeReducer } from \"./mode\"\r\nimport { volumeReducer } from \"./volume\"\r\nimport { keyDescReducer } from \"./keyDesc\"\r\nimport { databaseReducer } from \"./database\"\r\n\r\nconst allReducers = combineReducers({\r\n    powerReducer,\r\n    modeReducer,\r\n    volumeReducer,\r\n    keyDescReducer,\r\n    databaseReducer\r\n})\r\n\r\nexport default allReducers","export const powerReducer = (state = true, action) => {\r\n    switch (action.type) {\r\n        case \"power\":\r\n            return !state\r\n        default:\r\n            return state\r\n    }\r\n}","export const modeReducer = (state = 1, action) => {\r\n    switch(action.type) {\r\n        case \"mode\":\r\n            return (state === 1) ? 2 : 1\r\n        default:\r\n            return state\r\n    }\r\n}","export const volumeReducer = (state = 50, action) => {\r\n    switch(action.type) {\r\n        case \"volume\":\r\n            return action.volumeLevel\r\n        default:\r\n            return state;\r\n    }\r\n}","export const keyDescReducer = (state = \"\", action) => {\r\n    switch(action.type) {\r\n        case \"dislayKeyDesc\":\r\n            return action.description\r\n        default:\r\n            return state\r\n    }\r\n}","export const databaseReducer = (state = [], action) => {\r\n    switch(action.type) {\r\n        case \"getDatabase\":\r\n            return action.database\r\n        default:\r\n            return state\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport './index.css'\r\n\r\nimport { createStore } from \"redux\"\r\nimport { Provider } from \"react-redux\"\r\nimport allReducers from './reducers';\r\n\r\nconst store = createStore(allReducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}